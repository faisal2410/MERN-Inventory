{"version":3,"sources":["helper/config.js","APIRequest/SummaryAPIRequest.js","components/Dashboard/Dashboard.jsx","helper/FormHelper.js"],"names":["BaseURL","AxiosHeader","headers","getToken","ExpensesSummary","store","dispatch","ShowLoader","URL","axios","get","res","HideLoader","status","SetExpenseChart","data","SetExpenseTotal","ErrorToast","ReturnSummary","SetReturnChart","SetReturnTotal","SaleSummary","SetSaleChart","SetSaleTotal","PurchaseSummary","SetPurchaseChart","SetPurchaseTotal","Dashboard","useEffect","ExpenseChart","useSelector","state","dashboard","ExpenseTotal","SaleChart","SaleTotal","ReturnChart","ReturnTotal","PurchaseChart","PurchaseTotal","className","value","displayType","thousandSeparator","prefix","ResponsiveContainer","width","height","AreaChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Area","type","stroke","fill","EmailRegx","MobileRegx","length","test","msg","cogoToast","error","position","success","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","IsEmpty","IsMobile","IsEmail","getBase64","SuccessToast"],"mappings":"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","file":"static/js/11.ebb29ddc.chunk.js","sourcesContent":["export const BaseURL=\"/api/v1\";","import axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../helper/FormHelper\";\r\nimport store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport {getToken} from \"../helper/SessionHelper\";\r\nimport {\r\n    SetExpenseChart,\r\n    SetExpenseTotal, SetPurchaseChart, SetPurchaseTotal,\r\n    SetReturnChart,\r\n    SetReturnTotal, SetSaleChart, SetSaleTotal\r\n} from \"../redux/state-slice/dashboard-slice\";\r\nimport {BaseURL} from \"../helper/config\";\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\n\r\n\r\nexport async function ExpensesSummary(){\r\n    try {\r\n        debugger;\r\n        store.dispatch(ShowLoader())\r\n        debugger;\r\n        let URL=BaseURL+\"/ExpensesSummary\";\r\n        debugger;\r\n        let res=await axios.get(URL,AxiosHeader)\r\n        debugger;\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            debugger;\r\n            store.dispatch(SetExpenseChart(res.data['data'][0]['Last30Days']))\r\n            store.dispatch(SetExpenseTotal(res.data['data'][0]['Total'][0]['TotalAmount']))\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e){\r\n        store.dispatch(HideLoader())\r\n        ErrorToast(\"Something Went Wrong\")\r\n    }\r\n}\r\n\r\nexport async function ReturnSummary(){\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL=BaseURL+\"/ReturnSummary\";\r\n        let res=await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetReturnChart(res.data['data'][0]['Last30Days']))\r\n            store.dispatch(SetReturnTotal(res.data['data'][0]['Total'][0]['TotalAmount']))\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e){\r\n        store.dispatch(HideLoader())\r\n        ErrorToast(\"Something Went Wrong\")\r\n    }\r\n}\r\n\r\nexport async function SaleSummary(){\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL=BaseURL+\"/SalesSummary\";\r\n        let res=await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetSaleChart(res.data['data'][0]['Last30Days']))\r\n            store.dispatch(SetSaleTotal(res.data['data'][0]['Total'][0]['TotalAmount']))\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e){\r\n        store.dispatch(HideLoader())\r\n        ErrorToast(\"Something Went Wrong\")\r\n    }\r\n}\r\n\r\nexport async function PurchaseSummary(){\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL=BaseURL+\"/PurchaseSummary\";\r\n        let res=await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetPurchaseChart(res.data['data'][0]['Last30Days']))\r\n            store.dispatch(SetPurchaseTotal(res.data['data'][0]['Total'][0]['TotalAmount']))\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }\r\n    catch (e){\r\n        store.dispatch(HideLoader())\r\n        ErrorToast(\"Something Went Wrong\")\r\n    }\r\n}\r\n\r\n","import React, {useEffect} from 'react';\r\nimport {ExpensesSummary, PurchaseSummary, ReturnSummary, SaleSummary} from \"../../APIRequest/SummaryAPIRequest\";\r\nimport {AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer} from 'recharts';\r\nimport {useSelector} from \"react-redux\";\r\nimport CurrencyFormat from 'react-currency-format';\r\nconst Dashboard = () => {\r\n\r\n    useEffect(()=>{\r\n        (async () => {\r\n            await ExpensesSummary()\r\n            await SaleSummary()\r\n            await ReturnSummary()\r\n            await PurchaseSummary()\r\n        })();\r\n    },[])\r\n\r\n    let ExpenseChart = useSelector((state) => state.dashboard.ExpenseChart);\r\n    let ExpenseTotal = useSelector((state) => state.dashboard.ExpenseTotal);\r\n\r\n    let SaleChart = useSelector((state) => state.dashboard.SaleChart);\r\n    let SaleTotal = useSelector((state) => state.dashboard.SaleTotal);\r\n\r\n    let ReturnChart = useSelector((state) => state.dashboard.ReturnChart);\r\n    let ReturnTotal = useSelector((state) => state.dashboard.ReturnTotal);\r\n\r\n\r\n    let PurchaseChart = useSelector((state) => state.dashboard.PurchaseChart);\r\n    let PurchaseTotal = useSelector((state) => state.dashboard.PurchaseTotal);\r\n\r\n    return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 p-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <span className=\"h5\">\r\n                                    <CurrencyFormat value={ExpenseTotal} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                </span>\r\n                                <p>Total Expense</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 p-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                               <span className=\"h5\">\r\n                                    <CurrencyFormat value={SaleTotal} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                </span>\r\n                                <p>Total Sale</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 p-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                               <span className=\"h5\">\r\n                                    <CurrencyFormat value={PurchaseTotal} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                </span>\r\n                                <p>Total Purchase</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 p-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                               <span className=\"h5\">\r\n                                    <CurrencyFormat value={ReturnTotal} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                </span>\r\n                                <p>Total Return</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 p-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <span className=\"h6\">Expense Last 30 Days</span>\r\n                                <ResponsiveContainer className=\"mt-4\" width=\"100%\" height={200}>\r\n                                    <AreaChart width={500} height={200} data={ExpenseChart} margin={{top: 10, right: 30, left: 0, bottom: 0,}}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"_id\" />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                        <Area type=\"monotone\" dataKey=\"TotalAmount\" stroke=\"#CB0C9F\" fill=\"#CB0C9F\" />\r\n                                    </AreaChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 p-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <span className=\"h6\">Sales Last 30 Days</span>\r\n                                <ResponsiveContainer className=\"mt-4\" width=\"100%\" height={200}>\r\n                                    <AreaChart width={500} height={200} data={SaleChart} margin={{top: 10, right: 30, left: 0, bottom: 0,}}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"_id\" />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                        <Area type=\"monotone\" dataKey=\"TotalAmount\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n                                    </AreaChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 p-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <span className=\"h6\">Purchase Last 30 Days</span>\r\n                                <ResponsiveContainer className=\"mt-4\" width=\"100%\" height={200}>\r\n                                    <AreaChart width={500} height={200} data={PurchaseChart} margin={{top: 10, right: 30, left: 0, bottom: 0,}}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"_id\" />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                        <Area type=\"monotone\" dataKey=\"TotalAmount\" stroke=\"#00A884\" fill=\"#00A884\" />\r\n                                    </AreaChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 p-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <span className=\"h6\">Return Last 30 Days</span>\r\n                                <ResponsiveContainer className=\"mt-4\" width=\"100%\" height={200}>\r\n                                    <AreaChart width={500} height={200} data={ReturnChart} margin={{top: 10, right: 30, left: 0, bottom: 0,}}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"_id\" />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                        <Area type=\"monotone\" dataKey=\"TotalAmount\" stroke=\"#CB0C9F\" fill=\"#CB0C9F\" />\r\n                                    </AreaChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n};\r\nexport default Dashboard;","import cogoToast from \"cogo-toast\";\r\nlet EmailRegx = /\\S+@\\S+\\.\\S+/;\r\nlet MobileRegx = /(^(\\+88|0088)?(01){1}[3456789]{1}(\\d){8})$/;\r\nclass FormHelper {\r\n    IsEmpty(value) {\r\n        return value.length === 0;\r\n    }\r\n    IsMobile(value){\r\n        return MobileRegx.test(value);\r\n    }\r\n    IsEmail(value) {\r\n        return !EmailRegx.test(value);\r\n    }\r\n    ErrorToast(msg) {\r\n        cogoToast.error(msg, { position: \"bottom-center\" });\r\n    }\r\n    SuccessToast(msg) {\r\n        cogoToast.success(msg, { position: \"bottom-center\" });\r\n    }\r\n    getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    }\r\n}\r\nexport const {IsEmpty, IsMobile, IsEmail, ErrorToast, getBase64, SuccessToast} = new FormHelper();"],"sourceRoot":""}